language: python
os: linux
sudo: required
dist: xenial

python:
    - 3.7
notifications:
    email: false
addons:
    apt:
        packages:
            - python3-sphinx
            - libevent-dev
            - libhdf5-dev
env:
    global:
        - MAKEFLAGS="-j 2"
        - TEST_DIR="$TRAVIS_BUILD_DIR/tests/simulate-chime/"

services:
    - docker
    - redis-server

before_install:
    - pip install black
    - pip install pydocstyle

install:
    - pip install -r requirements.txt
    - pip install .

script:
    # Run black on all .py files in all subfolders
    - black -l 99 --check --exclude kotekan .

    # Run pydocstyle on all .py files
    - find . -type d \( -path ./docs -o -path ./tests/simulate-chime \) -prune -o ! -name versioneer.py ! -name _version.py -name \*.py -exec pydocstyle --convention=numpy {} +

    # Build docs
    - cd docs
    - make html
    - cd ..

    # Simulate CHIME cluster
# Disabled: kotekan does not run on travis, because it is not possible to increase `ulimit -l`.
#    - cd tests/simulate-chime
#
#    # Build kotekan and dependencies (cached repositories)
#
#    # Sometimes an empty directory is cached
#    - count=$(ls -1q highfive | wc -l)
#    - if [[ $count -eq 0 ]]; then rm -rf highfive; fi
#    - count=$(ls -1q kotekan | wc -l)
#    - if [[ $count -eq 0 ]]; then rm -rf kotekan; fi
#
#    - if cd highfive; then git pull && cd ..; else git clone --single-branch --branch extensible-datasets https://github.com/jrs65/highfive.git; fi
#    - if cd kotekan; then git pull; else git clone --single-branch --branch rn/stdout https://github.com/kotekan/kotekan.git && cd kotekan; fi
#    - git status
#    - if cd build; then cd ..; else mkdir build; fi
#    - cd build && cmake -DUSE_HDF5=ON -DHIGHFIVE_PATH=$TEST_DIR/highfive ..
#    - make
#    - cd ../..
#
#    # Load docker images
#    - docker pull nritsche/kotekan-receiver
#    - docker pull nritsche/kotekan-gpu
#    - docker pull nritsche/comet
#
#    - export DOCKER_CLIENT_TIMEOUT=120
#    - export COMPOSE_HTTP_TIMEOUT=120
#    - docker-compose -f docker-compose.yaml up &
#    - cd ../../scripts
#    - sleep 10
#
#    - coco -c ../tests/simulate-chime/coco.conf &
#    - sleep 10
#
#    - coco-client -r FULL -c ../tests/simulate-chime/coco.conf start
#    - sleep 15
#
#    - # Call some endpoints
#    - coco-client -c ../tests/simulate-chime/coco.conf status
#
#    - coco-client -c ../tests/simulate-chime/coco.conf stop
#    - sleep 15
#
#    - docker kill $(docker ps -q)
